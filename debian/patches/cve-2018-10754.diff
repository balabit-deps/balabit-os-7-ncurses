Description: Fix for CVE-2018-10754 in the _nc_write_entry function
 Fix for CVE-2018-10754 cherry-picked from upstream patchlevel
 20180414: add a null-pointer check in _nc_parse_entry to handle an
 error when a use-name is invalid syntax (report by Chung-Yi Lin).
Author: Sven Joachim <svenjoac@gmx.de>
Forwarded: not-needed
Last-Update: 2018-05-09

---
 ncurses/tinfo/parse_entry.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

--- a/ncurses/tinfo/parse_entry.c
+++ b/ncurses/tinfo/parse_entry.c
@@ -543,9 +543,11 @@ _nc_parse_entry(ENTRY * entryp, int lite
 		 * Otherwise, look for a base entry that will already
 		 * have picked up defaults via translation.
 		 */
-		for (i = 0; i < entryp->nuses; i++)
-		    if (!strchr((char *) entryp->uses[i].name, '+'))
+		for (i = 0; i < entryp->nuses; i++) {
+		    if (entryp->uses[i].name != 0
+			&& !strchr(entryp->uses[i].name, '+'))
 			has_base_entry = TRUE;
+		}
 	    }
 
 	    postprocess_termcap(&entryp->tterm, has_base_entry);
